@page "/persisted-counter"

@inject ProtectedLocalStorage ProtectedLocalStore
@inject ProtectedSessionStorage ProtectedSessionStore

<h1>Protected browser storage</h1>

<p>Contador Local: @localCount</p>
<p>Contador Session: @sessionCount</p>

<button class="btn btn-primary" @onclick="IncrementLocalCount">Incrementar contador local</button>
<button class="btn btn-primary" @onclick="IncrementSessionCount">incrementar contador sesson</button>

@code {
    int localCount = 0;
    int sessionCount = 0;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await UpdateLocalCount();
            await UpdateSessionCount();
        }
    }

    async Task IncrementLocalCount()
    {
        await ProtectedLocalStore.SetAsync("localCount", localCount + 1);
        await UpdateLocalCount();
    }

    async Task IncrementSessionCount()
    {
        await ProtectedSessionStore.SetAsync("sessionCount", sessionCount + 1);
        await UpdateSessionCount();
    }

    async Task UpdateLocalCount()
    {
        var localResult = await ProtectedLocalStore.GetAsync<int>("localCount");
        localCount = localResult.Success ? localResult.Value : 0;

        StateHasChanged();
    }

    async Task UpdateSessionCount()
    {
        var sessionResult = await ProtectedSessionStore.GetAsync<int>("sessionCount");
        sessionCount = sessionResult.Success ? sessionResult.Value : 0;

        StateHasChanged();
    }
}
